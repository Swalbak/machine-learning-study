{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"3-2 code review","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNpZMI3r1Ifa0yriwIJYXBc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","## 정훈\n","\n","---\n","\n","3-2 선형 회귀 알고리즘\n","농어 데이터 세팅(numpy)\n","```python\n","import numpy as np\n","#features of perch\n","perch_length = np.array([8.4, 13.7, 15.0, 16.2, 17.4, 18.0, 18.7, 19.0, 19.6, 20.0, 21.0,\n","       21.0, 21.0, 21.3, 22.0, 22.0, 22.0, 22.0, 22.0, 22.5, 22.5, 22.7,\n","       23.0, 23.5, 24.0, 24.0, 24.6, 25.0, 25.6, 26.5, 27.3, 27.5, 27.5,\n","       27.5, 28.0, 28.7, 30.0, 32.8, 34.5, 35.0, 36.5, 36.0, 37.0, 37.0,\n","       39.0, 39.0, 39.0, 40.0, 40.0, 40.0, 40.0, 42.0, 43.0, 43.0, 43.5,\n","       44.0])\n","\n","perch_weight = np.array([5.9, 32.0, 40.0, 51.5, 70.0, 100.0, 78.0, 80.0, 85.0, 85.0, 110.0,\n","       115.0, 125.0, 130.0, 120.0, 120.0, 130.0, 135.0, 110.0, 130.0,\n","       150.0, 145.0, 150.0, 170.0, 225.0, 145.0, 188.0, 180.0, 197.0,\n","       218.0, 300.0, 260.0, 265.0, 250.0, 250.0, 300.0, 320.0, 514.0,\n","       556.0, 840.0, 685.0, 700.0, 700.0, 690.0, 900.0, 650.0, 820.0,\n","       850.0, 900.0, 1015.0, 820.0, 1100.0, 1000.0, 1100.0, 1000.0,\n","       1000.0])\n","```\n","\n","<br/>\n","\n","훈련 및 테스트 데이터 세트 만들기\n","```python\n","from sklearn.model_selection import train_test_split\n","\n","train_input, test_input, train_target, test_target=train_test_split(perch_length, perch_weight, random_state=42)\n","\n","train_input=train_input.reshape(-1, 1)\n","test_input=test_input.reshape(-1, 1)\n","```\n","\n","<br/>\n","\n","최근접 이웃 회귀 알고리즘 학습\n","```python\n","from sklearn.neighbors import KNeighborsRegressor\n","\n","knr=KNeighborsRegressor(n_neighbors=3)\n","knr.fit(train_input, train_target)\n","\n","#길이가 50인 농어의 무게 예측: 1033g\n","print(knr.predict([[50]]))\n","```\n","    [1033.33333333]\n","\n","<br/>\n","\n","데이터의 산점도, 길이 50의 농어가 참조하는 이웃 표시\n","```python\n","import matplotlib.pyplot as plt\n","\n","#길이가 50인 농어의 이웃(3개) 구하기\n","distances, indexes=knr.kneighbors([[50]])\n","plt.scatter(train_input, train_target)\n","#이웃(3개) 표시하기\n","plt.scatter(train_input[indexes], train_target[indexes], marker=\"D\")\n","#길이 50, 무게 1033으로 예측한 농어 표시\n","plt.scatter(50, 1033, marker=\"^\")\n","\n","plt.xlabel(\"length\")\n","plt.ylabel(\"weight\")\n","plt.show()\n","```\n","![png](JungHun_files/JungHun1.png)\n","\n","<br/>\n","\n","이웃들의 target 데이터(weight) 평균\n","```python\n","#이웃들의 target 데이터(무게)의 평균 = 길이가 50인 농어의 무게 예측값\n","print(np.mean(train_target[indexes]))\n","```\n","    1033.3333333333333\n",":::warning 문제점\n","이웃 회귀 알고리즘에서는 거리 기반으로 판단하므로, 길이가 아무리 길어져도 참조하는 3개의 이웃 데이터는 같다. 따라서 길이가 매우 긴 농어가 들어가도 똑같이 1033g으로 예측할 것이다.\n",":::\n","\n","<br/>\n","\n","모델 기반 학습 - 선형 회귀 알고리즘\n","```python\n","#선형 회귀 알고리즘 클래스\n","from sklearn.linear_model import LinearRegression\n","\n","lr=LinearRegression()\n","\n","#가장 적절한 모델 파라미터 찾기\n","lr.fit(train_input, train_target)\n","print(lr.predict([[50]]))\n","\n","#coef_(기울기), intercept_(y절편): 모델 파라미터\n","print(lr.coef_, lr.intercept_)\n","```\n","    [1241.83860323]\n","    [39.01714496] -709.0186449535477\n","\n",":::info 선형 회귀 알고리즘\n","가장 기본적인 직선 방정식인 $y=ax+b$에 대하여, 학습을 통해 가장 적절한 a와 b의 값을 찾게 된다. 이를 **모델 파라미터**라고 한다. (위 예제에서는 x: length, y: weight)\n",":::\n","\n","<br/>\n","\n","선형 회귀 모델 평가\n","```python\n","plt.scatter(train_input, train_target)\n","\n","#농어의 길이(x)가 15cm~50cm까지의 직선 그래프 그리기 - x가 15인 지점과 x가 50인 지점을 이은 것(기울기와 절편 대입)\n","plt.plot([15, 50], [15*lr.coef_+lr.intercept_, 50*lr.coef_+lr.intercept_])\n","\n","plt.scatter(50, 1241.8, marker=\"^\")\n","plt.xlabel(\"length\")\n","plt.ylabel(\"weight\")\n","plt.show()\n","\n","#50cm 도미가 직선상에 있다. -> 알고리즘 직선 그래프 확인\n","\n","#전체적인 점수가 낮으므로 과소적합으로 볼 수 있음\n","print(lr.score(train_input, train_target))\n","print(lr.score(test_input, test_target))\n","```\n","![png](JungHun_files/JungHun2.png)\n","\n","    0.939846333997604\n","    0.8247503123313558\n","\n",":::info 예제에서 선형 회귀의 문제점\n","그래프를 보았을 때 0이하로 쭉 이어지게 되며, 길이가 0 이하인 농어는 없으므로 현실적으로 불가능한 데이터이다. \n","\n"," 또한 산점도의 그래프를 보았을 때, 약간의 곡선 형태를 가지고 있으므로, 1차 그래프는 적합하지 않다.\n",":::\n","\n","<br/>\n","\n","2차식의 그래프를 위한 데이터 셋 생성\n","```python\n","train_poly=np.column_stack((train_input**2, train_input))\n","test_poly=np.column_stack((test_input**2, test_input))\n","```\n","\n","<br/>\n","\n","2차식에 대한 가장 적합한 모델 파라미터 찾기 - 다항회귀\n","```python\n","lr=LinearRegression()\n","#y=ax^2 + bx + c 에서 가장 적합한 값들 찾기(모델 파라미터)\n","lr.fit(train_poly, train_target)\n","#50cm 농어 무게 예측\n","print(lr.predict([[50**2, 50]]))\n","#a와 b의 값: coef_, c의 값: intercept_\n","#-> y(무게) = 1.01 * x(길이)^2 - 21.55* x + 116.05 로 예측\n","print(lr.coef_, lr.intercept_)\n","```\n","    [1573.98423528]\n","    [  1.01433211 -21.55792498] 116.0502107827827\n","\n",":::info n차식의 모델 파라미터\n","해당 예제에서 coef_가 배열 형태로 주어진 것을 확인할 수 있다. 이는 $x^2$의 계수와 $x$의 계수가 묶여있는 것으로, n차식이라면 n개의 계수가 나오게 될 것이다.\n",":::\n","\n","<br/>\n","\n","2차 그래프의 산점도 그래프 확인\n","```python\n","#15~49의 정수 배열\n","point=np.arange(15, 50)\n","plt.scatter(train_input, train_target)\n","#앞서 구한 a, b, c를 이용한 2차 방정식 그래프 그리기(1씩 끊어 그리기)\n","plt.plot(point, 1.01*point**2 - 21.6*point + 116.05)\n","\n","#예측했던 50cm짜리 농어\n","plt.scatter(50, 1574, marker=\"^\")\n","plt.xlabel(\"length\")\n","plt.ylabel(\"weight\")\n","plt.show()\n","```\n","![png](JungHun_files/JungHun3.png)\n","\n","<br/>\n","\n","다항 회귀의 모델 평가 - 약간의 과소적합\n","```python\n","#약간의 과소적합\n","print(lr.score(train_poly, train_target))\n","print(lr.score(test_poly, test_target))\n","```\n","    0.9706807451768623\n","    0.9775935108325122\n"],"metadata":{"id":"RlPKMtC2zxE9"}}]}
{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"numpy broadcasting","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyN8Q6vkCzFbQUD9kB7oWTAO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# numpy 데이터 준비하기 - 브로드캐스팅\n","\n","* 사전적 정의: 브로드캐스팅(broadcasting)은 송신 호스트가 전송한 데이터가 네트워크에 연결된 모든 호스트에 전송되는 방식을 의미한다.\n","\n","* numpy에서의 브로드캐스팅: 형태가 다른 배열끼리의 연산을 수행하게 해주는 기능\n","\n","# 브로드캐스팅의 조건\n","1. 빈 배열을 제외한 멤버가 하나인 배열은 어떠한 형태의 배열과도 브로드캐스팅 가능\n","\n","    -> 각 요소마다 더해짐\n","    * array[3][4] + array[1]\n","\n","    ```python\n","    array1=np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\n","    array2=np.array([1])\n","\n","    array1+array2\n","    ```\n","    > [[ 2  3  4  5]\n","    >\n","    > [ 6  7  8  9]\n","    >\n","    > [10 11 12 13]]\n","\n","2. 2차원 배열의 각 요소 배열의 길이와 같은 길이의 1차원 배열과 브로드캐스팅 가능\n","\n","    ->각 요소 배열과 더해짐\n","    * array[3][4] + array[4]\n","\n","    ```python\n","    array1=np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\n","    array2=np.array([3, 3, 3, 3])\n","\n","    array1+array2\n","    ```\n","    result\n","    >[[ 4  5  6  7]\n","    >\n","    > [ 8  9 10 11]\n","    >\n","    > [12 13 14 15]]\n","\n","3. 두 배열의 차원의 짝이 맞는 경우 브로드캐스팅 가능\n","    * array[3][4] + array[3][4]\n","\n","    ```python\n","    array1=np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\n","    array2=np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\n","    ```\n","    result\n","    > [[ 2  4  6  8]\n","    >\n","    > [10 12 14 16]\n","    >\n","    > [18 20 22 24]]\n","\n","    * array[4][1] + array[1][4]\n","    ```python\n","    array1=np.array([1, 1, 1, 1])\n","    array2=np.array([[1], [2], [3], [4]])\n","    ```\n","    result\n","    > [[2 2 2 2]\n","    >\n","    > [3 3 3 3]\n","    >\n","    > [4 4 4 4]\n","    >\n","    > [5 5 5 5]]\n"],"metadata":{"id":"Q-NQH0UHakVq"}},{"cell_type":"code","source":["import numpy as np\n","\n","array1=np.array([1, 1, 1, 1])\n","array2=np.array([[1], [2], [3], [4]])\n","\n","print(array1+array2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tH_rxW4id525","executionInfo":{"status":"ok","timestamp":1657681350673,"user_tz":-540,"elapsed":2,"user":{"displayName":"육정훈컴퓨터공학과","userId":"02161633069955737715"}},"outputId":"53985d27-e9b1-49a6-e0d6-37c6c5aca022"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[2 2 2 2]\n"," [3 3 3 3]\n"," [4 4 4 4]\n"," [5 5 5 5]]\n"]}]}]}